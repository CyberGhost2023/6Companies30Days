/*
Time Complexity - O(N)
Space Complexity - O(N)

Question Link- https://practice.geeksforgeeks.org/problems/deee0e8cf9910e7219f663c18d6d640ea0b87f87/1/#
*/

vector<int> max_of_subarrays(vector<int> ar, int n, int k) {
        priority_queue<pair<int,int>> pq;
        for(int i=0;i<k;i++)
        {
            pq.push({ar[i],i});
        }
        vector<int> vt;
        vt.push_back(pq.top().first);
        for(int i=k;i<n;i++)
        {
            pq.push({ar[i],i});
            while(!pq.empty() && pq.top().second<=i-k)
            {
                pq.pop();
            }
            vt.push_back(pq.top().first);
        }
        return vt;
    }
