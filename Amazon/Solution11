/*
Time Complexity- O(N)
Space Complexity - O(N)

Question Link- https://practice.geeksforgeeks.org/problems/serialize-and-deserialize-a-binary-tree/1
*/

//Function to serialize a tree and return a list containing nodes of tree.
    vector<int> serialize(Node *root) 
    {
        Node *cur=root;
        stack<Node*> st;
        vector<int> vt;
        while(cur || !st.empty())
        {
            while(cur)
            {
                st.push(cur);
                cur=cur->left;
            }
            cur=st.top();
            vt.push_back(cur->data);
            cur=cur->right;
            st.pop();
        }
        return vt;
    }
    
    //Function to deserialize a list and construct the tree.
    Node * deSerialize(vector<int> &A)
    {
       Node *rt=new Node(A[0]);
       Node *tp=rt;
       for(int i=1;i<A.size();i++)
       {
           tp->right=new Node(A[i]);
           tp=tp->right;
       }
       return rt;
    }
