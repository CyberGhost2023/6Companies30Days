/*
Time Complexity - O(N*M) 
Space Complexity - O(N*M)

Question Link - https://practice.geeksforgeeks.org/problems/length-of-largest-region-of-1s-1587115620/1/#
*/

void find(vector<vector<int>> &grid,int i,int j,int *cnt,vector<vector<int>> &vis)
    {
        int n=grid.size(),m=grid[0].size();
        if(i<0 || i>=n || j<0 || j>=m || vis[i][j] || grid[i][j]==0)
        return;
        vis[i][j]=1;
        *cnt+=1;
        int xx[]={-1,-1,-1,0,0,1,1,1};
        int yy[]={-1,0,1,-1,1,-1,0,1};
        for(int x=0;x<8;x++)
        {
            find(grid,i+xx[x],j+yy[x],cnt,vis);
        }
        
    }
    int findMaxArea(vector<vector<int>>& grid) {
        int n=grid.size(),m=grid[0].size();    
        vector<vector<int>> vis(n,vector<int>(m,0));
        int ans=0;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<m;j++)
            {
                if(vis[i][j]==0 && grid[i][j]==1)
                {
                    int cnt=0;
                    find(grid,i,j,&cnt,vis);
                    ans=max(cnt,ans);
                }
            }
        }
        return ans;
    }
