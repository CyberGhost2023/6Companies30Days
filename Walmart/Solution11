/*
Time Complexity- O(KlogK+NlogN)
Space Complexity- O(K+N)

Question Link- https://leetcode.com/problems/maximum-performance-of-a-team/
*/
const int mod=1000000007;
    int maxPerformance(int n, vector<int>& sp, vector<int>& eff, int k) {
        vector<pair<int,int>> vt(n);
        for(int i=0;i<n;i++)
            vt[i]={eff[i],sp[i]};
        sort(rbegin(vt),rend(vt));
        priority_queue<int,vector<int>,greater<int>> pq;
        long long res=0,sum=0;
        for(auto [e,s]:vt)
        {
            sum+=s;
            pq.push(s);
            if(pq.size()>k)
            {
                sum-=pq.top();
                pq.pop();
            }
            res=max(res,sum*e);
        }
        return res%mod;
    }
