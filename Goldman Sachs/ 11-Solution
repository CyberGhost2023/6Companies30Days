//Question Link - https://practice.geeksforgeeks.org/problems/find-missing-and-repeating2512/1/

//Solution-

int * findTwoElement(int *arr, int n) {
        int x=0,val;
        for(int i=0;i<n;i++)
        {
            x^=abs(arr[i])^(i+1);
            if(arr[abs(arr[i])-1]>0)
            {
               arr[abs(arr[i])-1]*=-1; 
            }
            else
            {
                val=abs(arr[i]);
            }
        }
        int ar[2]={val,val^x};
        int *pt=ar;
        return pt;
}

/*
Time Complexity - O(N)
Space Complexity - O(1).

Algorithm- 
1-find xor or all array elements and then xor them with all elements from 1 to N. This will give xor of missing element and duplicate element.
2-Iterate through array and convert the value at index arr[i] to negative. At the end find the value whose index value i.e. arr[abs(arr[i]-1] is positive, which will be the duplicate element.
3-Xor the values you get in step-1 and step-2 to get missing value.
*/
