//Question - https://practice.geeksforgeeks.org/problems/k-largest-elements3736/1

//Reference -https://www.geeksforgeeks.org/k-largestor-smallest-elements-in-an-array/

//Solution -

vector<int> kLargest(int arr[], int n, int k){
        priority_queue<int,vector<int>,greater<int>> pq;
        for(int i=0;i<k;i++)
        {
            pq.push(arr[i]);
        }
        for(int i=k;i<n;i++)
        {
            if(arr[i]>pq.top())
            {
                pq.pop();
                pq.push(arr[i]);
            }
        }
        vector<int> vt;
        while(!pq.empty())
        {
            vt.push_back(pq.top());
            pq.pop();
        }
        sort(vt.begin(),vt.end(),greater<int>());
        return vt;
}

/*
Time Complexity - O(N*log(K))+O(KlogK) = O(NlogK) (Assuming N is very large & answer is required in descending order)
Space Complexity - O(K)

Algorithm -
1- Store the first K elements in a min heap. 
2-For all N-K elements, check if the top value of heap less than those elements. If true, then remove it and insert the element in the heap.
3-store the heap in a vector, sort it and display it.
*/
